name: Develop Branch Push or Merge and Image Build

on:
  push:
    branches: [ "develop", "14-set-up-cicd-pipeline" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven and Run tests
        run: mvn clean package

      - name: Build Docker Image
        if: success()
        run: docker build -t zythaarcz/garbage-backend-develop:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push to Docker Hub
        run: docker push zythaarcz/garbage-backend-develop:latest

      - name: Install Minikube
        if: success()
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube

      - name: Start Minikube
        if: success()
        run: minikube start

      - name: Set Docker Env
        if: success()
        run: |
          eval $(minikube docker-env --shell bash)

      - name: Pull image from Docker Hub
        if: success()
        run: |
          docker pull zythaarcz/garbage-backend-develop:latest

      - name: Deploy to Kubernetes
        if: success()
        run: |
          echo "apply yaml file"
          kubectl apply -f ./k8s-deployment.yaml

      - name: Check Deployments
        if: success()
        run: |
          echo "Checking deployments..."
          kubectl get deployments

      - name: Capture Kubernetes Logs
        if: success()
        run: |
          kubectl logs -l app=garbage-backend > garbage-backend-logs.txt
          kubectl logs -l app=postgres-db > postgres-db-logs.txt

      - name: Upload Kubernetes Logs as Artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: kubernetes-logs
          path: |
            garbage-backend-logs.txt
            postgres-db-logs.txt